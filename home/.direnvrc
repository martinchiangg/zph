add_extra_vimrc() {
  local extravim="$(find_up .vimrc)"
  echo "Extra vim: $extravim"
  if [ -n "$extravim" ]; then
    echo "Adding extra .vimrc: ${extravim}"
    path_add EXTRA_VIM $extravim
  fi
}

include_work_env(){
  source_env $HOME/source/.envrc
}

include_work_zsh(){
  source $HOME/source/.work.zsh
}

include_zsh(){
  source "${1}"
}

export_env_file(){
  IFS=$'\n'
  export $(cat "${1}" | grep -ve "^#" | tr -d "[\"\']$")
}

export_dotgpg_file(){
  source <( dotgpg cat $1 )
}

export_local_env_file(){
  export_env_file "${PWD}/$1"
}

source_local_env_file(){
  eval "$(cat ${PWD}/$1)"
}

# Usage: layout gb
#
# Sets up environment for a Go project using the alternative gb build tool. In
# addition to project executables on PATH, this includes an exclusive, project-
# local GOPATH which enables many tools like gocode and oracle to "just work".
#
# http://getgb.io/
#
layout_gb() {
  export GOPATH="$PWD/vendor:$PWD"
  PATH_add "$PWD/vendor/bin"
  PATH_add bin
}
layout_gopwd(){
  export GOPATH="$PWD"
  PATH_add bin
}

# use a certain pyenv version
use_python() {
    if [ -n "$(which pyenv)" ]; then
        local pyversion=$1
        pyenv local ${pyversion}
    fi
}

layout_virtualenv() {
    local pyversion=$1
    local pvenv=$2
    if [ -n "$(which pyenv-virtualenv)" ]; then
        pyenv virtualenv --force --quiet ${pyversion} ${pvenv}-${pyversion}
    fi
    pyenv local --unset
}

layout_activate() {
    if [ -n "$(which pyenv)" ]; then
      pyenv_root=$(pyenv root)
      source $pyenv_root/versions/$1/bin/activate
    fi
}
