#!/usr/bin/env bash
# Requires imagemagick to perform conversions
# Usage: $0 image-filename retina-width-in-pixels
# Output:
# image@2x.png at width
# image@1x.png at 1/2 of retina
# image@0,75x.png at .75
# image@0,50x.png at .50
# image@0,25x.png at .25
# TODO:
# - add check for imagemagic or exit

set -CEeuo pipefail
IFS=$'\n\t'
shopt -s extdebug

filename_base(){
  local filename="$1"
  echo "$filename" | awk -F '.' '{print $1}'
}

filename_ext(){
  local filename="$1"
  echo "$filename" | awk -F '.' '{print $2}'
}

create_filename(){
  printf "%s@%sx.%s" "$1" "$2" "$3"
}

process_image(){
  local img="$1"
  local width="$2"
  local multiplier="$(echo "$3" | tr '.' ',')"
  local ext="$4"

  local input="$img"
  set +u
  local base
  base="$(filename_base "$img")"
  set -u
  #local output="easy-to-create-artwork@2x.png"
  local output="$(create_filename "$base" "$multiplier" "$ext")"
  convert -resize "$width" "$input" "$output"
  echo convert -resize "$width" "$input" "$output"
}

quarter="0.25"
half="0.50"
three_quarters="0.75"
regular="1.00"
retina="2.00"

SIZES=($quarter $half $three_quarters $regular $retina)

main(){
  local img="$1"
  local width="$2"
  local ext="$(filename_ext "$img")"
  local new_file_ext="${3:-$ext}"
  local regular_width="$(echo "$width" | awk '{print $1 / 2}')"

  for size in "${SIZES[@]}";do
    local resized_width="$(echo "$size $regular_width" | awk '{print $1 * 1.0 * $2}')"
    process_image "$img" "$resized_width" "$size" "$new_file_ext"
  done
}

main $*
