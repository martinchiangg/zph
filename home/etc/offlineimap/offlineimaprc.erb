# Notice: This is automatically generated and any configurations in here will be lost
# Date last generated <%= Time.now.to_s %>

[general]
ui = blinkenlights
accounts = <%= SHORT_NAME %>
pythonfile=~/.mutt/offlineimap.py
fsync = False

[Account <%= SHORT_NAME %>]
localrepository = <%= SHORT_NAME %>-Local
remoterepository = <%= SHORT_NAME %>-Remote
# createfolders = False
status_backend = sqlite
postsynchook = notmuch new

[Repository <%= SHORT_NAME %>-Local]
type = Maildir
localfolders = <%= LOCAL_FOLDERS %><%= EMAIL %>
# Not tested & unimportant given this is for backup purpose only
# nametrans = lambda foldername: re.sub ('^gmail', '[Gmail]',
#                                        re.sub ('^airmail', '[Airmail]',
#                                        re.sub ('sent', 'Sent_mail',
#                                        re.sub ('flagged', 'Starred',
#                                        re.sub ('_', ' ', foldername.lower())))))

[Repository <%= SHORT_NAME %>-Remote]
readonly = True
createfolders = False
sslcacertfile = <%= CA_BUNDLE %>
maxconnections = 1
type = Gmail
remoteuser = <%= EMAIL %>
remotepasseval = get_keychain_pass(account="<%= EMAIL %>", server="<%= SERVER %>")
realdelete = no
nametrans = lambda foldername: re.sub ('^\[gmail\]', 'gmail',
                                       re.sub ('^\[airmail\]', 'airmail',
                                       re.sub ('sent_mail', 'sent',
                                       re.sub ('starred', 'flagged',
                                       re.sub (' ', '_', foldername.lower())))))
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             'Archive',
                                             ]
